LavaPack.loadBundle([[6744,{"../../app/scripts/lib/util":134,"../../shared/constants/app":4977,"../../shared/constants/hardware-wallets":4985,"../../shared/constants/metametrics":4989,"../../shared/constants/permissions":4997,"../../shared/lib/four-byte":5013,"../../shared/lib/switch-direction":5018,"../../shared/modules/conversion.utils":5030,"../../shared/modules/error":5032,"../../shared/modules/hexstring-utils":5036,"../../shared/modules/i18n":5037,"../../shared/modules/selectors":5048,"../../shared/modules/selectors/networks":5049,"../../shared/modules/string-utils":5053,"../ducks/alerts/unconnected-account":5952,"../ducks/metamask/metamask":5968,"../ducks/send":5973,"../helpers/constants/notifications":5984,"../pages/swaps/swaps.util":6714,"../selectors":6731,"./actionConstants":6743,"./background-connection":6745,"@metamask/keyring-controller":1796,"@metamask/profile-sync-controller/sdk":2064,"@metamask/rpc-errors":2141,"@metamask/snaps-utils":2471,"@sentry/browser":2747,buffer:3392,lodash:4111,loglevel:4117},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){(function(t){(function(){Object.defineProperty(n,"__esModule",{value:!0}),n.abortTransactionSigning=function(e){return async t=>{try{await(0,C.submitRequestToBackground)("abortTransactionSigning",[e])}catch(e){t(se(e))}}},n.accountTrackerStartPolling=async function(e){const t=await(0,C.submitRequestToBackground)("accountTrackerStartPolling",[e]);return await pe(t),t},n.accountTrackerStopPollingByPollingToken=async function(e){await(0,C.submitRequestToBackground)("accountTrackerStopPollingByPollingToken",[e]),await ye(e)},n.addImportedTokens=function(e,t){return async n=>{try{await(0,C.submitRequestToBackground)("addImportedTokens",[e,t])}catch(e){(0,M.logErrorWithMessage)(e)}finally{await de(n)}}},n.addNetwork=function(e){return async t=>{a.default.debug("background.addNetwork",e);try{return await(0,C.submitRequestToBackground)("addNetwork",[e])}catch(e){(0,M.logErrorWithMessage)(e),t(se("Had a problem adding networks!"))}return undefined}},n.addNewAccount=function(){return a.default.debug("background.addNewAccount"),async(e,t)=>{const n=(0,f.getInternalAccounts)(t()).filter((e=>e.metadata.keyring.type===i.KeyringTypes.hd));let a;e(ne());try{a=await(0,C.submitRequestToBackground)("addNewAccount",[Object.keys(n).length])}catch(t){throw e(se(t)),t}finally{e(re())}return await de(e),a}},n.addNft=function(e,t,n){return async a=>{if(!e)throw new Error("MetaMask - Cannot add NFT without address");if(!t)throw new Error("MetaMask - Cannot add NFT without tokenID");n||a(ne());try{await(0,C.submitRequestToBackground)("addNft",[e,t])}catch(e){(0,M.logErrorWithMessage)(e),a(se(e))}finally{await de(a),a(re())}}},n.addNftVerifyOwnership=function(e,t,n){return async a=>{if(!e)throw new Error("MetaMask - Cannot add NFT without address");if(!t)throw new Error("MetaMask - Cannot add NFT without tokenID");n||a(ne());try{await(0,C.submitRequestToBackground)("addNftVerifyOwnership",[e,t])}catch(e){if((0,M.isErrorWithMessage)(e)){const t=(0,M.getErrorMessage)(e);if(t.includes("This NFT is not owned by the user")||t.includes("Unable to verify ownership"))throw e;(0,M.logErrorWithMessage)(e),a(se(e))}}finally{await de(a),a(re())}}},n.addPermittedAccount=function(e,t){return async n=>{await new Promise(((n,a)=>{(0,C.callBackgroundMethod)("addPermittedAccount",[e,t],(e=>{e?a(e):n()}))})),await de(n)}},n.addPermittedAccounts=function(e,t){return async n=>{await new Promise(((n,a)=>{(0,C.callBackgroundMethod)("addPermittedAccounts",[e,t],(e=>{e?a(e):n()}))})),await de(n)}},n.addPermittedChain=function(e,t){return async n=>{await new Promise(((n,a)=>{(0,C.callBackgroundMethod)("addPermittedChain",[e,t],(e=>{e?a(e):n()}))})),await de(n)}},n.addPermittedChains=function(e,t){return async n=>{await new Promise(((n,a)=>{(0,C.callBackgroundMethod)("addPermittedChains",[e,t],(e=>{e?a(e):n()}))})),await de(n)}},n.addPollingTokenToAppState=pe,n.addToAddressBook=function(e,t="",n=""){return a.default.debug("background.addToAddressBook"),async(a,r)=>{const{chainId:o}=(0,m.getProviderConfig)(r());let s;try{s=await(0,C.submitRequestToBackground)("setAddressBook",[(0,y.toChecksumHexAddress)(e),t,o,n]),await de(a)}catch(e){throw(0,M.logErrorWithMessage)(e),a(se("Address book failed to update")),e}s||a(se("Address book failed to update"))}},n.addToken=function({address:e,symbol:t,decimals:n,image:a,networkClientId:r},o){return async s=>{if(!e)throw new Error("MetaMask - Cannot add token without address");o||s(ne());try{await(0,C.submitRequestToBackground)("addToken",[{address:e,symbol:t,decimals:n,image:a,networkClientId:r}])}catch(e){(0,M.logErrorWithMessage)(e),s(se(e))}finally{await de(s),s(re())}}},n.addTransactionAndRouteToConfirmationPage=function(e,t){return async n=>{const r=(0,C.generateActionId)();try{a.default.debug("background.addTransaction");const o=await(0,C.submitRequestToBackground)("addTransaction",[e,{...t,actionId:r,origin:l.ORIGIN_METAMASK}]);return n(X()),o}catch(e){throw n(re()),n(se(e)),e}}},n.addTransactionAndWaitForPublish=async function(e,t){a.default.debug("background.addTransactionAndWaitForPublish");const n=(0,C.generateActionId)();return await(0,C.submitRequestToBackground)("addTransactionAndWaitForPublish",[e,{...t,origin:l.ORIGIN_METAMASK,actionId:n}])},n.approvePermissionsRequest=function(e){return t=>{(0,C.callBackgroundMethod)("approvePermissionsRequest",[e],(e=>{e&&t(se(e)),de(t)}))}},n.attemptLedgerTransportCreation=async function(){return await(0,C.submitRequestToBackground)("attemptLedgerTransportCreation")},n.automaticallySwitchNetwork=function(e,t){return async n=>{await J(e),await n(Z({networkClientId:e,origin:t})),await de(n)}},n.backupUserData=async function(){let e;try{e=await(0,C.submitRequestToBackground)("backupUserData")}catch(e){throw(0,M.logErrorWithMessage)(e),e}return e},n.cancelDecryptMsg=function(e){return async t=>{t(ne());try{await(0,C.submitRequestToBackground)("cancelDecryptMessage",[e.id])}finally{t(re())}return await de(t),t(U(e.id)),t(te()),e}},n.cancelEncryptionPublicKeyMsg=function(e){return async t=>{t(ne());try{await(0,C.submitRequestToBackground)("cancelEncryptionPublicKey",[e.id])}finally{t(re())}return await de(t),t(U(e.id)),t(te()),e}},n.cancelQRHardwareSignRequest=function(){return async e=>{e(re()),await(0,C.submitRequestToBackground)("cancelQRHardwareSignRequest")}},n.cancelSmartTransaction=function(e){return async t=>{try{await(0,C.submitRequestToBackground)("cancelSmartTransaction",[e])}catch(e){if((0,M.logErrorWithMessage)(e),(0,M.isErrorWithMessage)(e)){const n=(0,M.getErrorMessage)(e);if(n.startsWith("Fetch error:")){const e=(0,b.parseSmartTransactionsError)(n);t({type:v.SET_SMART_TRANSACTIONS_ERROR,payload:e})}}throw e}}},n.cancelSyncQRHardware=function(){return async e=>{e(re()),await(0,C.submitRequestToBackground)("cancelSyncQRHardware")}},n.cancelTx=function(e,t=!0){return n=>(t&&n(ne()),new Promise(((t,n)=>{(0,C.callBackgroundMethod)("rejectPendingApproval",[String(e.id),s.providerErrors.userRejectedRequest().serialize()],(e=>{e?n(e):t()}))})).then((()=>de(n))).then((()=>(n((0,w.resetSendState)()),n(U(e.id)),n(re()),n(te()),e))).catch((e=>{throw n(re()),e})))},n.cancelTxs=function(e){return async t=>{t(ne());try{const n=e.map((({id:e})=>e)),a=n.map((e=>new Promise(((t,n)=>{(0,C.callBackgroundMethod)("rejectPendingApproval",[String(e),s.providerErrors.userRejectedRequest().serialize()],(e=>{e?n(e):t()}))}))));await Promise.all(a),await de(t),t((0,w.resetSendState)()),n.forEach((e=>{t(U(e))}))}finally{(0,g.getEnvironmentType)()===l.ENVIRONMENT_TYPE_NOTIFICATION?Te():t(re())}}},n.captureSingleException=function(e){return async(t,n)=>{const{singleExceptions:a}=n().appState;e in a||(t({type:v.CAPTURE_SINGLE_EXCEPTION,value:e}),(0,r.captureException)(Error(e)))}},n.checkAccountsPresence=function(e){return async()=>{try{return await(0,C.submitRequestToBackground)("checkAccountsPresence",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.checkAndUpdateAllNftsOwnershipStatus=async function(){await(0,C.submitRequestToBackground)("checkAndUpdateAllNftsOwnershipStatus")},n.checkAndUpdateSingleNftOwnershipStatus=async function(e){await(0,C.submitRequestToBackground)("checkAndUpdateSingleNftOwnershipStatus",[e,!1])},n.checkHardwareStatus=function(e,t){return a.default.debug("background.checkHardwareStatus",e,t),async n=>{n(ne());let a=!1;try{a=await(0,C.submitRequestToBackground)("checkHardwareStatus",[e,t])}catch(e){throw(0,M.logErrorWithMessage)(e),n(se(e)),e}finally{n(re())}return await de(n),a}},n.clearAccountDetails=function(){return{type:v.CLEAR_ACCOUNT_DETAILS}},n.clearPendingTokens=function(){return{type:v.CLEAR_PENDING_TOKENS}},n.clearSmartTransactionFees=function(){(0,C.submitRequestToBackground)("clearSmartTransactionFees")},n.clearSwapsQuotes=function(){return async e=>{await(0,C.submitRequestToBackground)("clearSwapsQuotes"),await de(e)}},n.clearSwitchedNetworkDetails=function(){return async e=>{await(0,C.submitRequestToBackground)("clearSwitchedNetworkDetails",[]),await de(e)}},n.closeCurrentNotificationWindow=te,n.closeNotificationPopup=Te,n.closeWelcomeScreen=function(){return{type:v.CLOSE_WELCOME_SCREEN}},n.completeOnboarding=ce,n.completedTx=U,n.connectHardware=function(e,t,n,r){return a.default.debug("background.connectHardware",e,t,n),async(a,s)=>{const{ledgerTransportType:i}=s().metamask;let c;a(ne(`Looking for your ${(0,o.capitalize)(e)}...`));try{if(e===T.HardwareDeviceNames.ledger&&i===T.LedgerTransportTypes.webhid){const e=await window.navigator.hid.requestDevice({filters:[{vendorId:T.LEDGER_USB_VENDOR_ID}]});if(!e.some((e=>e.vendorId===Number(T.LEDGER_USB_VENDOR_ID))))throw new Error(r("ledgerWebHIDNotConnectedErrorMessage"))}c=await(0,C.submitRequestToBackground)("connectHardware",[e,t,n])}catch(t){(0,M.logErrorWithMessage)(t);const n=(0,M.getErrorMessage)(t);throw e===T.HardwareDeviceNames.ledger&&i===T.LedgerTransportTypes.webhid&&(0,M.isErrorWithMessage)(t)&&n.match("Failed to open the device")?(a(se(r("ledgerDeviceOpenFailureMessage"))),new Error(r("ledgerDeviceOpenFailureMessage"))):(e!==T.HardwareDeviceNames.qr&&a(se(t)),t)}finally{a(re())}return await de(a),c}},n.createCancelTransaction=function(e,t,n={}){let r;return a.default.debug("background.createCancelTransaction"),a=>{const o=(0,C.generateActionId)();return new Promise(((s,i)=>{(0,C.callBackgroundMethod)("createCancelTransaction",[e,t,{...n,actionId:o}],((t,n)=>{var o;if(t)return null!=t&&null!==(o=t.message)&&void 0!==o&&o.includes("Previous transaction is already confirmed")&&a(ee({name:"TRANSACTION_ALREADY_CONFIRMED",originalTransactionId:e})),a(se(t)),void i(t);if(n){const e=(0,f.getCurrentNetworkTransactions)({metamask:n}),{id:t}=e[e.length-1];r=t,s()}}))})).then((()=>de(a))).then((()=>r))}},n.createEventFragment=function(e){const t=(0,C.generateActionId)();return(0,C.submitRequestToBackground)("createEventFragment",[{...e,actionId:t}])},n.createMetaMetricsDataDeletionTask=async function(){return await(0,C.submitRequestToBackground)("createMetaMetricsDataDeletionTask")},n.createNewVault=D,n.createNewVaultAndGetSeedPhrase=function(e){return async t=>{t(ne());try{await D(e);return await L(e)}catch(e){throw t(se(e)),(0,M.isErrorWithMessage)(e)?new Error((0,M.getErrorMessage)(e)):e}finally{t(re())}}},n.createNewVaultAndRestore=function(e,n){return r=>{r(ne()),a.default.debug("background.createNewVaultAndRestore");const o=Array.from(t.from(n,"utf8").values());return new Promise(((t,n)=>{(0,C.callBackgroundMethod)("createNewVaultAndRestore",[e,o],(e=>{e?n(e):t()}))})).then((()=>r(H()))).then((()=>{r(Y()),r(re())})).catch((e=>(r(se(e)),r(re()),Promise.reject(e))))}},n.createOnChainTriggers=function(){return async()=>{try{await(0,C.submitRequestToBackground)("createOnChainTriggers")}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.createRetryTransaction=function(e,t){let n;return a=>new Promise(((r,o)=>{const s=(0,C.generateActionId)();(0,C.callBackgroundMethod)("createSpeedUpTransaction",[e,t,{actionId:s}],((e,t)=>{if(e)return a(se(e)),void o(e);if(t){const e=(0,f.getCurrentNetworkTransactions)(t);n=e[e.length-1],r()}}))})).then((()=>de(a))).then((()=>n))},n.createSpeedUpTransaction=function(e,t,n={}){let r;return a.default.debug("background.createSpeedUpTransaction"),a=>{const o=(0,C.generateActionId)();return new Promise(((s,i)=>{(0,C.callBackgroundMethod)("createSpeedUpTransaction",[e,t,{...n,actionId:o}],((e,t)=>{if(e)return a(se(e)),void i(e);if(t){const e=(0,f.getCurrentNetworkTransactions)(t);r=e[e.length-1],s()}}))})).then((()=>de(a))).then((()=>r))}},n.createTransactionEventFragment=function(e){const t=(0,C.generateActionId)();return(0,C.submitRequestToBackground)("createTransactionEventFragment",[{transactionId:e,actionId:t}])},n.currencyRateStartPolling=async function(e){const t=await(0,C.submitRequestToBackground)("currencyRateStartPolling",[{nativeCurrencies:e}]);return await pe(t),t},n.currencyRateStopPollingByPollingToken=async function(e){await(0,C.submitRequestToBackground)("currencyRateStopPollingByPollingToken",[e]),await ye(e)},n.decodeTransactionData=async function({transactionData:e,contractAddress:t,chainId:n}){return await(0,C.submitRequestToBackground)("decodeTransactionData",[{transactionData:e,contractAddress:t,chainId:n}])},n.decryptMsg=function(e){return a.default.debug("action - decryptMsg"),async t=>{t(ne()),a.default.debug("actions calling background.decryptMessage");try{await(0,C.submitRequestToBackground)("decryptMessage",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),t(se(e)),e}finally{t(re())}return await de(t),t(U(e.metamaskId)),t(te()),e}},n.decryptMsgInline=function(e){return a.default.debug("action - decryptMsgInline"),async t=>{a.default.debug("actions calling background.decryptMessageInline");try{await(0,C.submitRequestToBackground)("decryptMessageInline",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),t(se(e)),e}return(await de(t)).unapprovedDecryptMsgs[e.metamaskId]}},n.deleteAccountSyncingDataFromUserStorage=function(){return async()=>{try{return await(0,C.submitRequestToBackground)("deleteAccountSyncingDataFromUserStorage",[c.USER_STORAGE_FEATURE_NAMES.accounts])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.deleteExpiredNotifications=function(){return async(e,t)=>{const n=t().metamask.metamaskNotificationsList.filter((e=>{const t=new Date(Date.now()-N.NOTIFICATIONS_EXPIRATION_DELAY);return Boolean(e.readDate&&new Date(e.readDate)<t)})).map((({id:e})=>e));n.length&&(await(0,C.submitRequestToBackground)("deleteNotificationsById",[n]),await de(e))}},n.deleteInterface=function(e){return async t=>{await(0,C.submitRequestToBackground)("deleteInterface",[e]),await de(t)}},n.deleteNotificationsById=function(e){return async()=>{try{return await(0,C.submitRequestToBackground)("deleteNotificationsById",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.deleteOnChainTriggersByAccount=function(e){return async()=>{try{await(0,C.submitRequestToBackground)("deleteOnChainTriggersByAccount",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.detectNfts=function(){return async e=>{e(ae()),a.default.debug("background.detectNfts");try{await(0,C.submitRequestToBackground)("detectNfts")}finally{e(oe())}await de(e)}},n.detectTokens=function(){return async e=>{e(ne()),a.default.debug("background.detectTokens"),await(0,C.submitRequestToBackground)("detectTokens"),e(re()),await de(e)}},n.disableMetamaskNotifications=function(){return async()=>{try{await(0,C.submitRequestToBackground)("disableMetamaskNotifications")}catch(e){throw a.default.error(e),e}}},n.disableProfileSyncing=function(){return async()=>{try{await(0,C.submitRequestToBackground)("disableProfileSyncing")}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.disableSnap=function(e){return async t=>{await(0,C.submitRequestToBackground)("disableSnap",[e]),await de(t)}},n.disconnectOriginFromSnap=function(e,t){return async n=>{await(0,C.submitRequestToBackground)("disconnectOriginFromSnap",[e,t]),await de(n)}},n.dismissSmartTransactionsErrorMessage=function(){return{type:v.DISMISS_SMART_TRANSACTIONS_ERROR_MESSAGE}},n.displayWarning=se,n.enableMetamaskNotifications=function(){return async()=>{try{await(0,C.submitRequestToBackground)("enableMetamaskNotifications")}catch(e){throw a.default.error(e),e}}},n.enableProfileSyncing=function(){return async()=>{try{await(0,C.submitRequestToBackground)("enableProfileSyncing")}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.enableSnap=function(e){return async t=>{await(0,C.submitRequestToBackground)("enableSnap",[e]),await de(t)}},n.encryptionPublicKeyMsg=function(e){return a.default.debug("action - encryptionPublicKeyMsg"),async t=>{t(ne()),a.default.debug("actions calling background.encryptionPublicKey");try{await(0,C.submitRequestToBackground)("encryptionPublicKey",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),t(se(e)),e}finally{t(re())}return await de(t),t(U(e.metamaskId)),t(te()),e}},n.endBackgroundTrace=async function(e){const t=e.timestamp||performance.timeOrigin+performance.now();await(0,C.submitRequestToBackground)("endTrace",[{...e,timestamp:t}])},n.estimateGas=function(e){return(0,C.submitRequestToBackground)("estimateGas",[e])},n.estimateGasFee=function(e){return(0,C.submitRequestToBackground)("estimateGasFee",[e])},n.exportAccount=function(e,t,n,r){return function(o){return o(ne()),a.default.debug("background.verifyPassword"),new Promise(((s,i)=>{(0,C.callBackgroundMethod)("verifyPassword",[e],(function(c){if(c)return a.default.error("Error in verifying password."),o(re()),o(se("Incorrect Password.")),void i(c);a.default.debug("background.exportAccount"),(0,C.callBackgroundMethod)("exportAccount",[t,e],(function(e,t){if(o(re()),e)return(0,M.logErrorWithMessage)(e),o(se("Had a problem exporting the account.")),void i(e);n(t),r(!0),s(t)}))}))}))}},n.exportAccounts=function(e,t){return function(n){return a.default.debug("background.verifyPassword"),new Promise(((r,o)=>{(0,C.callBackgroundMethod)("verifyPassword",[e],(function(s){if(s)return a.default.error("Error in submitting password."),void o(s);a.default.debug("background.exportAccounts");const i=t.map((t=>new Promise(((a,r)=>(0,C.callBackgroundMethod)("exportAccount",[t,e],(function(e,t){if(e)return(0,M.logErrorWithMessage)(e),n(se("Had a problem exporting the account.")),void r(e);a(t)}))))));r(Promise.all(i))}))}))}},n.fetchAndSetQuotes=function(e,t){return async n=>{const[a,r]=await(0,C.submitRequestToBackground)("fetchAndSetQuotes",[e,t]);return await de(n),[a,r]}},n.fetchAndUpdateMetamaskNotifications=function(e){return async()=>{try{return await(0,C.submitRequestToBackground)("fetchAndUpdateMetamaskNotifications",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.fetchSmartTransactionFees=function(e,t){return async n=>{t&&(t.value="0x0");try{const a=await await(0,C.submitRequestToBackground)("fetchSmartTransactionFees",[e,t]);return n({type:v.SET_SMART_TRANSACTIONS_ERROR,payload:null}),a}catch(e){if((0,M.logErrorWithMessage)(e),(0,M.isErrorWithMessage)(e)){const t=(0,M.getErrorMessage)(e);if(t.startsWith("Fetch error:")){const e=(0,b.parseSmartTransactionsError)(t);n({type:v.SET_SMART_TRANSACTIONS_ERROR,payload:e})}}throw e}}},n.fetchSmartTransactionsLiveness=function(){return async()=>{try{await(0,C.submitRequestToBackground)("fetchSmartTransactionsLiveness")}catch(e){(0,M.logErrorWithMessage)(e)}}},n.finalizeEventFragment=function(e,t){return(0,C.submitRequestToBackground)("finalizeEventFragment",[e,t])},n.forceUpdateMetamaskState=de,n.forgetDevice=function(e){return a.default.debug("background.forgetDevice",e),async t=>{t(ne());try{await(0,C.submitRequestToBackground)("forgetDevice",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),t(se(e)),e}finally{t(re())}await de(t)}},n.gasFeeStartPollingByNetworkClientId=async function(e){const t=await(0,C.submitRequestToBackground)("gasFeeStartPolling",[{networkClientId:e}]);return await pe(t),t},n.gasFeeStopPollingByPollingToken=async function(e){await(0,C.submitRequestToBackground)("gasFeeStopPollingByPollingToken",[e]),await ye(e)},n.getBalancesInSingleCall=async function(e,t,n){return await(0,C.submitRequestToBackground)("getBalancesInSingleCall",[e,t,n])},n.getContractMethodData=function(e=""){return async(t,n)=>{const r=(0,g.addHexPrefix)(e).slice(0,10);if(r.length<10)return{};const{knownMethodData:o,use4ByteResolution:s}=n().metamask;if(null!=o&&o[r]&&0!==Object.keys(o[r]).length)return o[r];a.default.debug("loadingMethodData");const{name:i,params:c}=await(0,B.getMethodDataAsync)(r,s);return(0,C.callBackgroundMethod)("addKnownMethodData",[r,{name:i,params:c}],(e=>{e&&t(se(e))})),{name:i,params:c}}},n.getCurrentNetworkEIP1559Compatibility=async function(){let e;try{e=await(0,C.submitRequestToBackground)("getCurrentNetworkEIP1559Compatibility")}catch(e){console.error(e)}return e},n.getDeviceNameForMetric=function(e,t){return a.default.debug("background.getDeviceNameForMetric",e,t),async n=>{let a;n(ne());try{a=await(0,C.submitRequestToBackground)("getDeviceNameForMetric",[e,t])}catch(e){throw(0,M.logErrorWithMessage)(e),n(se(e)),e}finally{n(re())}return await de(n),a}},n.getGasFeeTimeEstimate=function(e,t){return(0,C.submitRequestToBackground)("getGasFeeTimeEstimate",[e,t])},n.getLastInteractedConfirmationInfo=async function(){return await(0,C.submitRequestToBackground)("getLastInteractedConfirmationInfo")},n.getLayer1GasFee=function({chainId:e,networkClientId:t,transactionParams:n}){return async()=>await(0,C.submitRequestToBackground)("getLayer1GasFee",[{chainId:e,networkClientId:t,transactionParams:n}])},n.getNFTContractInfo=async function(e,t){return await(0,C.submitRequestToBackground)("getNFTContractInfo",[e,t])},n.getNetworkConfigurationByNetworkClientId=async function(e){let t;try{t=await(0,C.submitRequestToBackground)("getNetworkConfigurationByNetworkClientId",[e])}catch(e){console.error(e)}return t},n.getNextAvailableAccountName=async function(e){return await(0,C.submitRequestToBackground)("getNextAvailableAccountName",[e])},n.getNextNonce=function(e){return async(t,n)=>{const a=(0,m.getSelectedNetworkClientId)(n());let r;try{r=await(0,C.submitRequestToBackground)("getNextNonce",[e,a])}catch(e){throw t(se(e)),e}return t(me(r)),r}},n.getOpenMetamaskTabsIds=function(){return async e=>{e(he(await(0,C.submitRequestToBackground)("getOpenMetamaskTabsIds")))}},n.getPhishingResult=async function(e){return await(0,C.submitRequestToBackground)("getPhishingResult",[e])},n.getRequestAccountTabIds=function(){return async e=>{e(we(await(0,C.submitRequestToBackground)("getRequestAccountTabIds")))}},n.getRpcMethodPreferences=function(){return async e=>{e(ne()),await(0,C.submitRequestToBackground)("getRpcMethodPreferences",[]),e(re())}},n.getSeedPhrase=L,n.getSnapAccountsById=async function(e){return await(0,C.submitRequestToBackground)("getAccountsBySnapId",[e])},n.getTokenStandardAndDetails=async function(e,t,n){return await(0,C.submitRequestToBackground)("getTokenStandardAndDetails",[e,t,n])},n.getTokenSymbol=async function(e){return await(0,C.submitRequestToBackground)("getTokenSymbol",[e])},n.getTransactions=async function(e={}){return await(0,C.submitRequestToBackground)("getTransactions",[e])},n.goHome=q,n.grantPermittedChain=async function(e,t){return await(0,C.submitRequestToBackground)("grantPermissionsIncremental",[{subject:{origin:e},approvedPermissions:{[P.EndowmentTypes.permittedChains]:{caveats:[{type:P.CaveatTypes.restrictNetworkSwitching,value:[t]}]}}}])},n.grantPermittedChains=async function(e,t){return await(0,C.submitRequestToBackground)("grantPermissions",[{subject:{origin:e},approvedPermissions:{[P.EndowmentTypes.permittedChains]:{caveats:[{type:P.CaveatTypes.restrictNetworkSwitching,value:t}]}}}])},n.handleSnapRequest=G,n.hideAccountBanner=function(){return(0,C.submitRequestToBackground)("setShowAccountBanner",[!1])},n.hideAlert=function(){return{type:v.ALERT_CLOSE}},n.hideBetaHeader=function(){return(0,C.submitRequestToBackground)("setShowBetaHeader",[!1])},n.hideDeprecatedNetworkModal=function(){return{type:v.DEPRECATED_NETWORK_POPOVER_CLOSE}},n.hideImportNftsModal=function(){return{type:v.IMPORT_NFTS_MODAL_CLOSE}},n.hideImportTokensModal=function(){return{type:v.IMPORT_TOKENS_POPOVER_CLOSE}},n.hideIpfsModal=function(){return{type:v.SHOW_IPFS_MODAL_CLOSE}},n.hideKeyringRemovalResultModal=function(){return{type:v.HIDE_KEYRING_SNAP_REMOVAL_RESULT}},n.hideLoadingIndication=re,n.hideModal=function(){return{type:v.MODAL_CLOSE}},n.hideNetworkBanner=function(){return(0,C.submitRequestToBackground)("setShowNetworkBanner",[!1])},n.hideNetworkDropdown=function(){return{type:v.NETWORK_DROPDOWN_CLOSE}},n.hideNftStillFetchingIndication=oe,n.hidePermissionsTour=function(){return(0,C.submitRequestToBackground)("setShowPermissionsTour",[!1])},n.hidePermittedNetworkToast=function(){return{type:v.SHOW_PERMITTED_NETWORK_TOAST_CLOSE}},n.hideTestNetMessage=function(){return(0,C.submitRequestToBackground)("setShowTestnetMessageInDropdown",[!1])},n.hideWarning=function(){return{type:v.HIDE_WARNING}},n.ignoreTokens=function({tokensToIgnore:e,dontShowLoadingIndicator:t=!1,networkClientId:n=null}){const a=Array.isArray(e)?e:[e];return async e=>{t||e(ne());try{await(0,C.submitRequestToBackground)("ignoreTokens",[a,n])}catch(t){(0,M.logErrorWithMessage)(t),e(se(t))}finally{await de(e),e(re())}}},n.importNewAccount=function(e,t,n){return async r=>{r(ne(n));try{a.default.debug("background.importAccountWithStrategy"),await(0,C.submitRequestToBackground)("importAccountWithStrategy",[e,t])}finally{r(re())}return await de(r)}},n.isNftOwner=async function(e,t,n){return await(0,C.submitRequestToBackground)("isNftOwner",[e,t,n])},n.lockMetamask=function(){return a.default.debug("background.setLocked"),e=>(e(ne()),z().then((()=>de(e))).catch((t=>(e(se((0,M.getErrorMessage)(t))),Promise.reject(t)))).then((()=>{e(re()),e({type:v.LOCK_METAMASK})})).catch((()=>{e(re()),e({type:v.LOCK_METAMASK})})))},n.markMetamaskNotificationsAsRead=function(e){return async()=>{try{await(0,C.submitRequestToBackground)("markMetamaskNotificationsAsRead",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.markPasswordForgotten=function(){return async e=>{try{await new Promise(((e,t)=>{(0,C.callBackgroundMethod)("markPasswordForgotten",[],(n=>{n?t(n):e()}))}))}finally{e(re()),await de(e)}}},n.multichainUpdateBalance=async function(e){return await(0,C.submitRequestToBackground)("multichainUpdateBalance",[e])},n.multichainUpdateBalances=async function(){return await(0,C.submitRequestToBackground)("multichainUpdateBalances",[])},n.performSignIn=function(){return async()=>{try{await(0,C.submitRequestToBackground)("performSignIn")}catch(e){const t=e instanceof Error?e.message:"Unknown error occurred during sign-in.";throw(0,M.logErrorWithMessage)(t),e}}},n.performSignOut=function(){return async()=>{try{await(0,C.submitRequestToBackground)("performSignOut")}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.qrCodeDetected=function(e){return async t=>{await t({type:v.QR_CODE_DETECTED,value:e}),t((0,w.computeEstimatedGasLimit)())}},n.rejectAllMessages=function(e){return async t=>{const n=(0,s.serializeError)(s.providerErrors.userRejectedRequest());await Promise.all(e.map((async({id:e})=>await(0,C.submitRequestToBackground)("rejectPendingApproval",[e,n]))));const{pendingApprovals:a}=await de(t);0===Object.values(a).length&&t(te())}},n.rejectPendingApproval=function(e,t){return async n=>{await(0,C.submitRequestToBackground)("rejectPendingApproval",[e,t]);const{pendingApprovals:a}=await de(n);0===Object.values(a).length&&n(te())}},n.rejectPermissionsRequest=function(e){return t=>new Promise(((n,a)=>{(0,C.callBackgroundMethod)("rejectPermissionsRequest",[e],(e=>{if(e)return t(se(e)),void a(e);de(t).then(n).catch(a)}))}))},n.removeAccount=function(e){return async t=>{t(ne());try{await new Promise(((t,n)=>{(0,C.callBackgroundMethod)("removeAccount",[e],((e,a)=>{e?n(e):t(a)}))})),await de(t)}catch(e){throw t(se(e)),e}finally{t(re())}a.default.info(`Account removed: ${e}`),t(Y())}},n.removeAndIgnoreNft=function(e,t,n){return async a=>{if(!e)throw new Error("MetaMask - Cannot ignore NFT without address");if(!t)throw new Error("MetaMask - Cannot ignore NFT without tokenID");n||a(ne());try{await(0,C.submitRequestToBackground)("removeAndIgnoreNft",[e,t])}catch(e){throw(0,M.logErrorWithMessage)(e),a(se(e)),e}finally{await de(a),a(re())}}},n.removeFromAddressBook=function(e,t){return a.default.debug("background.removeFromAddressBook"),async n=>{await(0,C.submitRequestToBackground)("removeFromAddressBook",[e,(0,y.toChecksumHexAddress)(t)]),await de(n)}},n.removeNetwork=function(e){return async()=>{try{await(0,C.submitRequestToBackground)("removeNetwork",[e])}catch(e){(0,M.logErrorWithMessage)(e)}}},n.removeNft=function(e,t,n){return async a=>{if(!e)throw new Error("MetaMask - Cannot remove NFT without address");if(!t)throw new Error("MetaMask - Cannot remove NFT without tokenID");n||a(ne());try{await(0,C.submitRequestToBackground)("removeNft",[e,t])}catch(e){(0,M.logErrorWithMessage)(e),a(se(e))}finally{await de(a),a(re())}}},n.removePermissionsFor=function(e){return t=>{(0,C.callBackgroundMethod)("removePermissionsFor",[e],(e=>{e&&t(se(e))}))}},n.removePermittedAccount=function(e,t){return async n=>{await new Promise(((n,a)=>{(0,C.callBackgroundMethod)("removePermittedAccount",[e,t],(e=>{e?a(e):n()}))})),await de(n)}},n.removePermittedChain=function(e,t){return async n=>{await new Promise(((n,a)=>{(0,C.callBackgroundMethod)("removePermittedChain",[e,t],(e=>{e?a(e):n()}))})),await de(n)}},n.removePollingTokenFromAppState=ye,n.removeSnap=function(e){return async(t,n)=>{var a;t(ne());const r=(null===(a=(0,f.getPermissionSubjects)(n())[e])||void 0===a||null===(a=a.permissions)||void 0===a?void 0:a.snap_manageAccounts)!==undefined;try{if(r){const t=await(0,C.submitRequestToBackground)("getAccountsBySnapId",[e]);for(const e of t)await(0,C.submitRequestToBackground)("removeAccount",[e])}await(0,C.submitRequestToBackground)("removeSnap",[e]),await de(t)}catch(e){throw t(se(e)),e}finally{t(re())}}},n.requestAccountsAndChainPermissionsWithId=function(e){return async t=>{const n=await(0,C.submitRequestToBackground)("requestAccountsAndChainPermissionsWithId",[e]);return await de(t),n}},n.requestAccountsPermissionWithId=function(e){return async t=>{const n=await(0,C.submitRequestToBackground)("requestAccountsPermissionWithId",[e]);return await de(t),n}},n.requestRevealSeedWords=function(e){return async t=>{t(ne()),a.default.debug("background.verifyPassword");try{await F(e);return await L(e)}finally{t(re())}}},n.requestUserApproval=function({origin:e,type:t,requestData:n}){return async a=>{try{await(0,C.submitRequestToBackground)("requestUserApproval",[{origin:e,type:t,requestData:n}])}catch(e){(0,M.logErrorWithMessage)(e),a(se("Had trouble requesting user approval"))}}},n.resetAccount=function(){return e=>(e(ne()),new Promise(((t,n)=>{(0,C.callBackgroundMethod)("resetAccount",[],((r,o)=>{if(e(re()),r)return(0,M.isErrorWithMessage)(r)&&e(se(r)),void n(r);a.default.info(`Transaction history reset for ${o}`),e(Y()),t(o)}))})))},n.resetBackgroundSwapsState=function(){return async e=>{await(0,C.submitRequestToBackground)("resetSwapsState"),await de(e)}},n.resetOnboarding=function(){return async e=>{try{await e(fe(!1)),e(ue())}catch(e){console.error(e)}}},n.resetOnboardingAction=ue,n.resetSwapsPostFetchState=function(){return async e=>{await(0,C.submitRequestToBackground)("resetPostFetchState"),await de(e)}},n.resetViewedNotifications=function(){return(0,C.submitRequestToBackground)("resetViewedNotifications")},n.resolvePendingApproval=function(e,t){return async n=>{await(0,C.submitRequestToBackground)("resolvePendingApproval",[e,t]);const{pendingApprovals:a}=await de(n);0===Object.values(a).length&&n(te())}},n.restoreUserData=async function(e){try{await(0,C.submitRequestToBackground)("restoreUserData",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}return!0},n.revokeDynamicSnapPermissions=function(e,t){return async n=>{await(0,C.submitRequestToBackground)("revokeDynamicSnapPermissions",[e,t]),await de(n)}},n.rollbackToPreviousProvider=function(){return async e=>{try{await(0,C.submitRequestToBackground)("rollbackToPreviousProvider")}catch(t){(0,M.logErrorWithMessage)(t),e(se("Had a problem changing networks!"))}}},n.safeRefetchQuotes=function(){return async e=>{await(0,C.submitRequestToBackground)("safeRefetchQuotes"),await de(e)}},n.sendMultichainTransaction=async function(e,{account:t,scope:n}){await G({snapId:e,origin:"metamask",handler:u.HandlerType.OnRpcRequest,request:{method:"startSendTransactionFlow",params:{account:t,scope:n}}})},n.setAccountDetailsAddress=function(e){return{type:v.SET_ACCOUNT_DETAILS_ADDRESS,payload:e}},n.setAccountLabel=function(e,t){return n=>(n(ne()),a.default.debug("background.setAccountLabel"),new Promise(((a,r)=>{(0,C.callBackgroundMethod)("setAccountLabel",[e,t],(o=>{if(n(re()),o)return n(se(o)),void r(o);n({type:v.SET_ACCOUNT_LABEL,value:{account:e,label:t}}),a(e)}))})))},n.setActiveNetwork=function(e){return async t=>{a.default.debug(`background.setActiveNetwork: ${e}`);try{await(0,C.submitRequestToBackground)("setActiveNetwork",[e])}catch(e){(0,M.logErrorWithMessage)(e),t(se("Had a problem changing networks!"))}}},n.setActiveNetworkConfigurationId=J,n.setActiveNetworkWithError=function(e){return async t=>{a.default.debug(`background.setActiveNetwork: ${e}`);try{await(0,C.submitRequestToBackground)("setActiveNetwork",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),t(se("Had a problem changing networks!")),new Error("Had a problem changing networks!")}}},n.setAddSnapAccountEnabled=async function(e){try{await(0,C.submitRequestToBackground)("setAddSnapAccountEnabled",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setAdvancedGasFee=function(e){return t=>{t(ne()),a.default.debug("background.setAdvancedGasFee"),(0,C.callBackgroundMethod)("setAdvancedGasFee",[e],(e=>{t(re()),e&&t(se(e))}))}},n.setAggregatedBalancePopoverShown=function(){return ie("shouldShowAggregatedBalancePopover",!1)},n.setAlertEnabledness=async function(e,t){await(0,C.submitRequestToBackground)("setAlertEnabledness",[e,t])},n.setAutoLockTimeLimit=function(e){return ie("autoLockTimeLimit",e)},n.setBackgroundSwapRouteState=function(e){return async t=>{await(0,C.submitRequestToBackground)("setBackgroundSwapRouteState",[e]),await de(t)}},n.setBitcoinSupportEnabled=async function(e){try{await(0,C.submitRequestToBackground)("setBitcoinSupportEnabled",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setBitcoinTestnetSupportEnabled=async function(e){try{await(0,C.submitRequestToBackground)("setBitcoinTestnetSupportEnabled",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setCompletedOnboarding=function(){return async e=>{e(ne());try{await(0,C.submitRequestToBackground)("completeOnboarding"),e(ce())}catch(t){throw e(se(t)),t}finally{e(re())}}},n.setConfirmationAdvancedDetailsOpen=function(e){return ie("showConfirmationAdvancedDetails",e)},n.setConfirmationExchangeRates=function(e){return{type:v.SET_CONFIRMATION_EXCHANGE_RATES,value:e}},n.setConnectedStatusPopoverHasBeenShown=function(){return()=>{(0,C.callBackgroundMethod)("setConnectedStatusPopoverHasBeenShown",[],(e=>{if((0,M.isErrorWithMessage)(e))throw new Error((0,M.getErrorMessage)(e))}))}},n.setCurrentCurrency=function(e){return async t=>{t(ne()),a.default.debug("background.setCurrentCurrency");try{await(0,C.submitRequestToBackground)("setCurrentCurrency",[e]),await de(t)}catch(e){return(0,M.logErrorWithMessage)(e),void t(se(e))}finally{t(re())}}},n.setCurrentExtensionPopupId=function(e){return async t=>{await(0,C.submitRequestToBackground)("setCurrentExtensionPopupId",[e]),await de(t)}},n.setCurrentLocale=ge,n.setCustomApproveTxData=function(e){return async t=>{await(0,C.submitRequestToBackground)("setCustomApproveTxData",[e]),await de(t)}},n.setDataCollectionForMarketing=function(e){return async t=>{a.default.debug("background.setDataCollectionForMarketing"),await(0,C.submitRequestToBackground)("setDataCollectionForMarketing",[e]),t({type:v.SET_DATA_COLLECTION_FOR_MARKETING,value:e})}},n.setDefaultHomeActiveTabName=function(e){return async t=>{await(0,C.submitRequestToBackground)("setDefaultHomeActiveTabName",[e]),await de(t)}},n.setDismissSeedBackUpReminder=function(e){return async t=>{t(ne()),await(0,C.submitRequestToBackground)("setDismissSeedBackUpReminder",[e]),t(re())}},n.setEditedNetwork=function(e=undefined){return{type:v.SET_EDIT_NETWORK,payload:e}},n.setFeatureAnnouncementsEnabled=function(e){return async()=>{try{await(0,C.submitRequestToBackground)("setFeatureAnnouncementsEnabled",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.setFeatureFlag=function(e,t,n){return a=>(a(ne()),new Promise(((r,o)=>{(0,C.callBackgroundMethod)("setFeatureFlag",[e,t],((e,t)=>{if(a(re()),e)return a(se(e)),void o(e);n&&a(ee({name:n})),r(t)}))})))},n.setFeatureNotificationsEnabled=function(e){return ie("featureNotificationsEnabled",e)},n.setFirstTimeFlowType=function(e){return async t=>{try{a.default.debug("background.setFirstTimeFlowType"),await(0,C.submitRequestToBackground)("setFirstTimeFlowType",[e]),t({type:v.SET_FIRST_TIME_FLOW_TYPE,value:e})}catch(e){t(se(e))}}},n.setHardwareWalletDefaultHdPath=function({device:e,path:t}){return{type:v.SET_HARDWARE_WALLET_DEFAULT_HD_PATH,payload:{device:e,path:t}}},n.setHideZeroBalanceTokens=function(e){return ie("hideZeroBalanceTokens",e)},n.setIncomingTransactionsPreferences=function(e,t){return async n=>{n(ne()),a.default.debug("background.setIncomingTransactionsPreferences"),await(0,C.submitRequestToBackground)("setIncomingTransactionsPreferences",[e,t]),n(re())}},n.setInitialGasEstimate=function(e){return async t=>{await(0,C.submitRequestToBackground)("setInitialGasEstimate",[e]),await de(t)}},n.setIpfsGateway=function(e){return t=>{a.default.debug("background.setIpfsGateway"),(0,C.callBackgroundMethod)("setIpfsGateway",[e],(e=>{e&&t(se(e))}))}},n.setIsIpfsGatewayEnabled=function(e){return t=>{a.default.debug("background.setIsIpfsGatewayEnabled"),(0,C.callBackgroundMethod)("setIsIpfsGatewayEnabled",[e],(e=>{e&&t(se(e))}))}},n.setIsProfileSyncingEnabled=function(e){return async t=>{try{t(ne()),await(0,C.submitRequestToBackground)("setIsProfileSyncingEnabled",[e]),t(re())}catch(e){throw(0,M.logErrorWithMessage)(e),e}finally{t(re())}}},n.setLastActiveTime=function(){return e=>{(0,C.callBackgroundMethod)("setLastActiveTime",[],(t=>{t&&e(se(t))}))}},n.setLastInteractedConfirmationInfo=async function(e){return await(0,C.submitRequestToBackground)("setLastInteractedConfirmationInfo",[e])},n.setLastViewedUserSurvey=function(e){return async()=>{await(0,C.submitRequestToBackground)("setLastViewedUserSurvey",[e])}},n.setName=function(e){return async()=>{await(0,C.submitRequestToBackground)("setName",[e])}},n.setNetworkClientIdForDomain=function(e,t){return(0,C.submitRequestToBackground)("setNetworkClientIdForDomain",[e,t])},n.setNewNetworkAdded=function({networkConfigurationId:e,nickname:t}){return{type:v.SET_NEW_NETWORK_ADDED,payload:{networkConfigurationId:e,nickname:t}}},n.setNewNftAddedMessage=function(e){return{type:v.SET_NEW_NFT_ADDED_MESSAGE,payload:e}},n.setNewTokensImported=function(e){return{type:v.SET_NEW_TOKENS_IMPORTED,payload:e}},n.setNewTokensImportedError=function(e){return{type:v.SET_NEW_TOKENS_IMPORTED_ERROR,payload:e}},n.setNextNonce=me,n.setOpenMetamaskTabsIDs=he,n.setOpenSeaEnabled=function(e){return async t=>{t(ne()),a.default.debug("background.setOpenSeaEnabled");try{await(0,C.submitRequestToBackground)("setOpenSeaEnabled",[e])}finally{t(re())}}},n.setOutdatedBrowserWarningLastShown=function(e){return async()=>{await(0,C.submitRequestToBackground)("setOutdatedBrowserWarningLastShown",[e])}},n.setOverrideContentSecurityPolicyHeader=function(e){return async t=>{t(ne()),await(0,C.submitRequestToBackground)("setOverrideContentSecurityPolicyHeader",[e]),t(re())}},n.setParticipateInMetaMetrics=function(e){return t=>(a.default.debug("background.setParticipateInMetaMetrics"),new Promise(((n,r)=>{(0,C.callBackgroundMethod)("setParticipateInMetaMetrics",[e],((o,s)=>{if(a.default.debug(o),o)return t(se(o)),void r(o);t({type:v.SET_PARTICIPATE_IN_METAMETRICS,value:e}),n([e,s])}))})))},n.setPendingTokens=function(e){const{customToken:t,selectedTokens:n={},tokenAddressList:a=[]}=e,r=null!=t&&t.address&&null!=t&&t.symbol&&Boolean((null==t?void 0:t.decimals)>=0&&(null==t?void 0:t.decimals)<=36)?{...n,[t.address]:{...t,isCustom:!0}}:n;return Object.keys(r).forEach((e=>{const t=a.find((t=>(0,S.isEqualCaseInsensitive)(t,e)));r[e]={...r[e],unlisted:!t}})),{type:v.SET_PENDING_TOKENS,payload:r}},n.setPetnamesEnabled=function(e){return ie("petnamesEnabled",e)},n.setPreference=ie,n.setPrivacyMode=function(e){return ie("privacyMode",e,!1)},n.setRecoveryPhraseReminderHasBeenShown=function(){return()=>{(0,C.callBackgroundMethod)("setRecoveryPhraseReminderHasBeenShown",[],(e=>{if((0,M.isErrorWithMessage)(e))throw new Error((0,M.getErrorMessage)(e))}))}},n.setRecoveryPhraseReminderLastShown=function(e){return()=>{(0,C.callBackgroundMethod)("setRecoveryPhraseReminderLastShown",[e],(e=>{if((0,M.isErrorWithMessage)(e))throw new Error((0,M.getErrorMessage)(e))}))}},n.setRedesignedConfirmationsDeveloperEnabled=function(e){return ie("isRedesignedConfirmationsDeveloperEnabled",e)},n.setRedesignedConfirmationsEnabled=function(e){return ie("redesignedConfirmationsEnabled",e)},n.setRedesignedTransactionsEnabled=function(e){return ie("redesignedTransactionsEnabled",e)},n.setRemoveNftMessage=function(e){return{type:v.SET_REMOVE_NFT_MESSAGE,payload:e}},n.setRequestAccountTabIds=we,n.setSecurityAlertsEnabled=function(e){try{(0,C.submitRequestToBackground)("setSecurityAlertsEnabled",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setSeedPhraseBackedUp=fe,n.setSelectedAccount=function(e){return async(t,n)=>{t(ne()),a.default.debug("background.setSelectedAccount");const r=n(),o=(0,p.getUnconnectedAccountAlertEnabledness)(r),s=r.activeTab.origin,i=(0,f.getInternalAccountByAddress)(r,e),c=(0,f.getPermittedAccountsForCurrentTab)(r),u=Boolean(s)&&c.includes(i.address),d=Boolean(s)&&c.includes(e),l=u&&!d;try{await $(i.id),await de(t)}catch(e){return void t(se(e))}finally{t(re())}o&&l&&(t((0,h.switchedToUnconnectedAccount)()),await be(s))}},n.setSelectedInternalAccount=function(e){return async t=>{t(ne()),a.default.debug("background.setSelectedInternalAccount");try{await $(e)}catch(e){return void t(se(e))}finally{t(re())}}},n.setSelectedNetworkConfigurationId=function(e){return{type:v.SET_SELECTED_NETWORK_CONFIGURATION_ID,payload:e}},n.setSelectedQuoteAggId=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSelectedQuoteAggId",[e]),await de(t)}},n.setServiceWorkerKeepAlivePreference=function(e){return async t=>{t(ne()),a.default.debug("background.setServiceWorkerKeepAlivePreference");try{await(0,C.submitRequestToBackground)("setServiceWorkerKeepAlivePreference",[e])}catch(e){t(se(e))}finally{t(re())}}},n.setShowExtensionInFullSizeView=function(e){return ie("showExtensionInFullSizeView",e)},n.setShowFiatConversionOnTestnetsPreference=function(e){return ie("showFiatInTestnets",e)},n.setShowMultiRpcModal=function(e){return ie("showMultiRpcModal",e)},n.setShowNativeTokenAsMainBalancePreference=function(e){return ie("showNativeTokenAsMainBalance",e)},n.setShowTestNetworks=function(e){return ie("showTestNetworks",e)},n.setSmartTransactionsPreferenceEnabled=function(e){return async(t,n)=>{const a=(0,E.getSmartTransactionsOptInStatusInternal)(n());ke({category:k.MetaMetricsEventCategory.Settings,event:k.MetaMetricsEventName.SettingsUpdated,properties:{stx_opt_in:e,prev_stx_opt_in:a}}),await t(ie("smartTransactionsOptInStatus",e)),await de(t)}},n.setSmartTransactionsRefreshInterval=function(e){return async()=>{try{await(0,C.submitRequestToBackground)("setStatusRefreshInterval",[e])}catch(e){(0,M.logErrorWithMessage)(e)}}},n.setSnapsAddSnapAccountModalDismissed=async function(){await(0,C.submitRequestToBackground)("setSnapsAddSnapAccountModalDismissed",[!0])},n.setSnapsInstallPrivacyWarningShownStatus=function(e){return async()=>{await(0,C.submitRequestToBackground)("setSnapsInstallPrivacyWarningShownStatus",[e])}},n.setSwapsErrorKey=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsErrorKey",[e]),await de(t)}},n.setSwapsFeatureFlags=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsFeatureFlags",[e]),await de(t)}},n.setSwapsLiveness=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsLiveness",[e]),await de(t)}},n.setSwapsQuotesPollingLimitEnabled=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsQuotesPollingLimitEnabled",[e]),await de(t)}},n.setSwapsTokens=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsTokens",[e]),await de(t)}},n.setSwapsTxGasLimit=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsTxGasLimit",[e,!0]),await de(t)}},n.setSwapsTxGasPrice=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsTxGasPrice",[e]),await de(t)}},n.setSwitchedNetworkDetails=Z,n.setTermsOfUseLastAgreed=function(e){return async()=>{await(0,C.submitRequestToBackground)("setTermsOfUseLastAgreed",[e])}},n.setTheme=function(e){return async t=>{t(ne()),a.default.debug("background.setTheme");try{await(0,C.submitRequestToBackground)("setTheme",[e])}finally{t(re())}}},n.setTokenNetworkFilter=function(e){return ie("tokenNetworkFilter",e,!1)},n.setTokenSortConfig=function(e){return ie("tokenSortConfig",e,!1)},n.setUnconnectedAccountAlertShown=be,n.setUse4ByteResolution=function(e){return async t=>{t(ne()),a.default.debug("background.setUse4ByteResolution");try{await(0,C.submitRequestToBackground)("setUse4ByteResolution",[e])}catch(e){t(se(e))}finally{t(re())}}},n.setUseAddressBarEnsResolution=function(e){return t=>{a.default.debug("background.setUseAddressBarEnsResolution"),(0,C.callBackgroundMethod)("setUseAddressBarEnsResolution",[e],(e=>{e&&t(se(e))}))}},n.setUseBlockie=function(e){return t=>{t(ne()),a.default.debug("background.setUseBlockie"),(0,C.callBackgroundMethod)("setUseBlockie",[e],(e=>{t(re()),e&&t(se(e))}))}},n.setUseCurrencyRateCheck=function(e){return t=>{t(ne()),a.default.debug("background.setUseCurrencyRateCheck"),(0,C.callBackgroundMethod)("setUseCurrencyRateCheck",[e],(e=>{t(re()),e&&t(se(e))}))}},n.setUseExternalNameSources=function(e){try{(0,C.submitRequestToBackground)("setUseExternalNameSources",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setUseMultiAccountBalanceChecker=function(e){return t=>{t(ne()),a.default.debug("background.setUseMultiAccountBalanceChecker"),(0,C.callBackgroundMethod)("setUseMultiAccountBalanceChecker",[e],(e=>{t(re()),e&&t(se(e))}))}},n.setUseNftDetection=function(e){return async t=>{t(ne()),a.default.debug("background.setUseNftDetection");try{await(0,C.submitRequestToBackground)("setUseNftDetection",[e])}finally{t(re())}}},n.setUseNonceField=function(e){return async t=>{t(ne()),a.default.debug("background.setUseNonceField");try{await(0,C.submitRequestToBackground)("setUseNonceField",[e])}catch(e){t(se(e))}t(re())}},n.setUsePhishDetect=function(e){return t=>{t(ne()),a.default.debug("background.setUsePhishDetect"),(0,C.callBackgroundMethod)("setUsePhishDetect",[e],(e=>{t(re()),e&&t(se(e))}))}},n.setUseRequestQueue=function(e){try{(0,C.submitRequestToBackground)("setUseRequestQueue",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setUseSafeChainsListValidation=function(e){return t=>{t(ne()),a.default.debug("background.setUseSafeChainsListValidation"),(0,C.callBackgroundMethod)("setUseSafeChainsListValidation",[e],(e=>{t(re()),e&&t(se(e))}))}},n.setUseTokenDetection=function(e){return t=>{t(ne()),a.default.debug("background.setUseTokenDetection"),(0,C.callBackgroundMethod)("setUseTokenDetection",[e],(e=>{t(re()),e&&t(se(e))}))}},n.setUseTransactionSimulations=function(e){try{(0,C.submitRequestToBackground)("setUseTransactionSimulations",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setWatchEthereumAccountEnabled=async function(e){try{await(0,C.submitRequestToBackground)("setWatchEthereumAccountEnabled",[e])}catch(e){(0,M.logErrorWithMessage)(e)}},n.setWeb3ShimUsageAlertDismissed=async function(e){await(0,C.submitRequestToBackground)("setWeb3ShimUsageAlertDismissed",[e])},n.showAccountsPage=Y,n.showAlert=function(e){return{type:v.ALERT_OPEN,payload:e}},n.showConfTxPage=X,n.showConfirmTurnOffProfileSyncing=function(){return e=>{e(ee({name:"CONFIRM_TURN_OFF_PROFILE_SYNCING"}))}},n.showConfirmTurnOnMetamaskNotifications=function(){return e=>{e(ee({name:"TURN_ON_METAMASK_NOTIFICATIONS"}))}},n.showDeprecatedNetworkModal=function(){return{type:v.DEPRECATED_NETWORK_POPOVER_OPEN}},n.showImportNftsModal=function(e){return{type:v.IMPORT_NFTS_MODAL_OPEN,payload:e}},n.showImportTokensModal=function(){return{type:v.IMPORT_TOKENS_POPOVER_OPEN}},n.showIpfsModal=function(){return{type:v.SHOW_IPFS_MODAL_OPEN}},n.showKeyringSnapRemovalModal=function(e){return{type:v.SHOW_KEYRING_SNAP_REMOVAL_RESULT,payload:e}},n.showLoadingIndication=ne,n.showModal=ee,n.showNetworkDropdown=function(){return{type:v.NETWORK_DROPDOWN_OPEN}},n.showNftStillFetchingIndication=ae,n.showPermittedNetworkToast=function(){return{type:v.SHOW_PERMITTED_NETWORK_TOAST_OPEN}},n.showPrivateKey=function(e){return{type:v.SHOW_PRIVATE_KEY,payload:e}},n.showQrScanner=function(){return e=>{e(ee({name:"QR_SCANNER"}))}},n.showSendTokenPage=function(){return{type:v.SHOW_SEND_TOKEN_PAGE}},n.signAndSendSmartTransaction=function({unsignedTransaction:e,smartTransactionFees:t}){return async n=>{const a=await Se(e,t.fees);try{return(await(0,C.submitRequestToBackground)("submitSignedTransactions",[{signedTransactions:a,signedCanceledTransactions:[],txParams:e}])).uuid}catch(e){if((0,M.logErrorWithMessage)(e),(0,M.isErrorWithMessage)(e)){const t=(0,M.getErrorMessage)(e);if(t.startsWith("Fetch error:")){const e=(0,b.parseSmartTransactionsError)(t);n({type:v.SET_SMART_TRANSACTIONS_ERROR,payload:e})}}throw e}}},n.stopPollingForQuotes=function(){return async e=>{await(0,C.submitRequestToBackground)("stopPollingForQuotes"),await de(e)}},n.submitPassword=O,n.submitQRHardwareCryptoAccount=async function(e){await(0,C.submitRequestToBackground)("submitQRHardwareCryptoAccount",[e])},n.submitQRHardwareCryptoHDKey=async function(e){await(0,C.submitRequestToBackground)("submitQRHardwareCryptoHDKey",[e])},n.submitQRHardwareSignature=async function(e,t){await(0,C.submitRequestToBackground)("submitQRHardwareSignature",[e,t])},n.syncInternalAccountsWithUserStorage=function(){return async()=>{try{return await(0,C.submitRequestToBackground)("syncInternalAccountsWithUserStorage")}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.throwTestBackgroundError=async function(e){await(0,C.submitRequestToBackground)("throwTestError",[e])},n.toggleAccountMenu=function(){return{type:v.TOGGLE_ACCOUNT_MENU}},n.toggleExternalServices=function(e){return async t=>{a.default.debug("background.toggleExternalServices");try{await(0,C.submitRequestToBackground)("toggleExternalServices",[e]),await de(t)}catch(e){t(se(e))}}},n.toggleNetworkMenu=function(e){return{type:v.TOGGLE_NETWORK_MENU,payload:e}},n.tokenBalancesStartPolling=async function(e){const t=await(0,C.submitRequestToBackground)("tokenBalancesStartPolling",[{chainId:e}]);return await pe(t),t},n.tokenBalancesStopPollingByPollingToken=async function(e){await(0,C.submitRequestToBackground)("tokenBalancesStopPollingByPollingToken",[e]),await ye(e)},n.tokenDetectionStartPolling=async function(e){const t=await(0,C.submitRequestToBackground)("tokenDetectionStartPolling",[{chainIds:e}]);return await pe(t),t},n.tokenDetectionStopPollingByPollingToken=async function(e){await(0,C.submitRequestToBackground)("tokenDetectionStopPollingByPollingToken",[e]),await ye(e)},n.tokenListStartPolling=async function(e){const t=await(0,C.submitRequestToBackground)("tokenListStartPolling",[{chainId:e}]);return await pe(t),t},n.tokenListStopPollingByPollingToken=async function(e){await(0,C.submitRequestToBackground)("tokenListStopPollingByPollingToken",[e]),await ye(e)},n.tokenRatesStartPolling=async function(e){const t=await(0,C.submitRequestToBackground)("tokenRatesStartPolling",[{chainId:e}]);return await pe(t),t},n.tokenRatesStopPollingByPollingToken=async function(e){await(0,C.submitRequestToBackground)("tokenRatesStopPollingByPollingToken",[e]),await ye(e)},n.trackInsightSnapUsage=function(e){return async()=>{await(0,C.submitRequestToBackground)("trackInsightSnapView",[e])}},n.trackMetaMetricsEvent=ke,n.trackMetaMetricsPage=function(e,t){return(0,C.submitRequestToBackground)("trackMetaMetricsPage",[{...e,actionId:(0,C.generateActionId)()},t])},n.tryReverseResolveAddress=function(e){return()=>new Promise((t=>{(0,C.callBackgroundMethod)("tryReverseResolveAddress",[e],(e=>{e&&(0,M.logErrorWithMessage)(e),t()}))}))},n.tryUnlockMetamask=function(e){return t=>(t(ne()),t(K()),a.default.debug("background.submitPassword"),new Promise(((t,n)=>{(0,C.callBackgroundMethod)("submitPassword",[e],(e=>{e?n(e):t()}))})).then((()=>(t(V()),de(t)))).then((()=>{t(re())})).catch((e=>(t(j((0,M.getErrorMessage)(e))),t(re()),Promise.reject(e)))))},n.unMarkPasswordForgotten=H,n.unlockAndGetSeedPhrase=function(e){return async t=>{t(ne());try{await O(e);const n=await L(e);return await de(t),n}catch(e){throw t(se(e)),(0,M.isErrorWithMessage)(e)?new Error((0,M.getErrorMessage)(e)):e}finally{t(re())}}},n.unlockFailed=j,n.unlockHardwareWalletAccounts=function(e,t,n,r){return a.default.debug("background.unlockHardwareWalletAccount",e,t,n,r),async a=>{a(ne());for(const o of e)try{await(0,C.submitRequestToBackground)("unlockHardwareWalletAccount",[o,t,n,r])}catch(e){throw(0,M.logErrorWithMessage)(e),a(se(e)),a(re()),e}return a(re()),undefined}},n.unlockInProgress=K,n.unlockSucceeded=V,n.updateAccountsList=function(e){return async()=>{await(0,C.submitRequestToBackground)("updateAccountsList",[e])}},n.updateAndApproveTx=function(e,t,n){return(a,r)=>{!t&&a(ne(n));const o=()=>Boolean(r().send.stage!==w.SEND_STAGES.INACTIVE);return new Promise(((t,n)=>{const r=(0,C.generateActionId)();(0,C.callBackgroundMethod)("resolvePendingApproval",[String(e.id),{txMeta:e,actionId:r},{waitForResult:!0}],(r=>{if(a(x(e.id,e.txParams)),o()||a((0,w.resetSendState)()),r)return a(q()),(0,M.logErrorWithMessage)(r),void n(r);t(e)}))})).then((()=>de(a))).then((()=>(o()||a((0,w.resetSendState)()),a(U(e.id)),a(re()),a(W("")),a(te()),e))).catch((e=>(a(re()),Promise.reject(e))))}},n.updateCurrentLocale=le,n.updateCustomNonce=W,n.updateCustomSwapsEIP1559GasParams=function({gasLimit:e,maxFeePerGas:t,maxPriorityFeePerGas:n}){return async a=>{await Promise.all([(0,C.submitRequestToBackground)("setSwapsTxGasLimit",[e]),(0,C.submitRequestToBackground)("setSwapsTxMaxFeePerGas",[t]),(0,C.submitRequestToBackground)("setSwapsTxMaxFeePriorityPerGas",[n])]),await de(a)}},n.updateDataDeletionTaskStatus=async function(){return await(0,C.submitRequestToBackground)("updateDataDeletionTaskStatus")},n.updateEditableParams=function(e,t){return async n=>{let a;try{a=await(0,C.submitRequestToBackground)("updateEditableParams",[e,t])}catch(e){throw(0,M.logErrorWithMessage)(e),e}return await de(n),a}},n.updateEventFragment=function(e,t){return(0,C.submitRequestToBackground)("updateEventFragment",[e,t])},n.updateHiddenAccountsList=function(e){return async()=>{await(0,C.submitRequestToBackground)("updateHiddenAccountsList",[e])}},n.updateInterfaceState=function(e,t){return async n=>{await(0,C.submitRequestToBackground)("updateInterfaceState",[e,t]),await de(n)}},n.updateMetamaskState=Q,n.updateNetwork=function(e,t={}){return async n=>{a.default.debug("background.updateNetwork",e);try{return await(0,C.submitRequestToBackground)("updateNetwork",[e.chainId,e,t])}catch(e){(0,M.logErrorWithMessage)(e),n(se("Had a problem updading networks!"))}return undefined}},n.updateNetworksList=function(e){return async()=>{await(0,C.submitRequestToBackground)("updateNetworksList",[e])}},n.updateNftDropDownState=function(e){return async t=>{await(0,C.submitRequestToBackground)("updateNftDropDownState",[e]),await de(t)}},n.updateOnChainTriggersByAccount=function(e){return async()=>{try{await(0,C.submitRequestToBackground)("updateOnChainTriggersByAccount",[e])}catch(e){throw(0,M.logErrorWithMessage)(e),e}}},n.updatePreviousGasParams=function(e,t){return async()=>{let n;try{n=await(0,C.submitRequestToBackground)("updatePreviousGasParams",[e,t])}catch(e){throw(0,M.logErrorWithMessage)(e),e}return n}},n.updateProposedNames=function(e){return async()=>await(0,C.submitRequestToBackground)("updateProposedNames",[e])},n.updateSmartTransaction=function(e,t){return async n=>{try{await(0,C.submitRequestToBackground)("updateSmartTransaction",[{uuid:e,...t}])}catch(e){if((0,M.logErrorWithMessage)(e),(0,M.isErrorWithMessage)(e)){const t=(0,M.getErrorMessage)(e);if(t.startsWith("Fetch error:")){const e=(0,b.parseSmartTransactionsError)(t);n({type:v.SET_SMART_TRANSACTIONS_ERROR,payload:e})}}throw e}}},n.updateSnap=function(e,t){return async(n,a)=>{await(0,C.submitRequestToBackground)("updateSnap",[e,t]),await de(n);const r=a(),o=(0,f.getFirstSnapInstallOrUpdateRequest)(r);return null==o?void 0:o.metadata.id}},n.updateSwapsUserFeeLevel=function(e){return async t=>{await(0,C.submitRequestToBackground)("setSwapsUserFeeLevel",[e]),await de(t)}},n.updateTokenType=async function(e){try{return await(0,C.submitRequestToBackground)("updateTokenType",[e])}catch(e){(0,M.logErrorWithMessage)(e)}return undefined},n.updateTransaction=function(e,t){return async n=>{!t&&n(ne());try{await(0,C.submitRequestToBackground)("updateTransaction",[e])}catch(t){throw n(x(e.id,e.txParams)),n(re()),n(q()),(0,M.logErrorWithMessage)(t),t}try{return n(x(e.id,e.txParams)),await de(n),n(X({id:e.id})),e}finally{n(re())}}},n.updateTransactionGasFees=function(e,t){return async()=>{let n;try{n=await(0,C.submitRequestToBackground)("updateTransactionGasFees",[e,t])}catch(e){throw(0,M.logErrorWithMessage)(e),e}return n}},n.updateTransactionParams=x,n.updateTransactionSendFlowHistory=function(e,t,n){return async()=>{let a;try{a=await(0,C.submitRequestToBackground)("updateTransactionSendFlowHistory",[e,t,n])}catch(e){throw(0,M.logErrorWithMessage)(e),e}return a}},n.updateViewedNotifications=function(e){return(0,C.submitRequestToBackground)("updateViewedNotifications",[e])},n.verifyPassword=F;var a=_(e("loglevel")),r=e("@sentry/browser"),o=e("lodash"),s=e("@metamask/rpc-errors"),i=e("@metamask/keyring-controller"),c=e("@metamask/profile-sync-controller/sdk"),u=e("@metamask/snaps-utils"),d=_(e("../../shared/lib/switch-direction")),l=e("../../shared/constants/app"),g=e("../../app/scripts/lib/util"),f=e("../selectors"),m=e("../../shared/modules/selectors/networks"),w=e("../ducks/send"),h=e("../ducks/alerts/unconnected-account"),p=e("../ducks/metamask/metamask"),y=e("../../shared/modules/hexstring-utils"),T=e("../../shared/constants/hardware-wallets"),k=e("../../shared/constants/metametrics"),b=e("../pages/swaps/swaps.util"),S=e("../../shared/modules/string-utils"),E=e("../../shared/modules/selectors"),R=e("../../shared/modules/i18n"),A=e("../../shared/modules/conversion.utils"),M=e("../../shared/modules/error"),B=e("../../shared/lib/four-byte"),P=e("../../shared/constants/permissions"),N=e("../helpers/constants/notifications"),v=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var n=I(t);if(n&&n.has(e))return n.get(e);var a={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&{}.hasOwnProperty.call(e,o)){var s=r?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(a,o,s):a[o]=e[o]}return a.default=e,n&&n.set(e,a),a}(e("./actionConstants")),C=e("./background-connection");function I(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,n=new WeakMap;return(I=function(e){return e?n:t})(e)}function _(e){return e&&e.__esModule?e:{default:e}}function q(){return{type:v.GO_HOME}}function O(e){return new Promise(((t,n)=>{(0,C.callBackgroundMethod)("submitPassword",[e],(e=>{e?n(e):t()}))}))}function D(e){return new Promise(((t,n)=>{(0,C.callBackgroundMethod)("createNewVaultAndKeychain",[e],(e=>{e?n(e):t(!0)}))}))}function F(e){return new Promise(((t,n)=>{(0,C.callBackgroundMethod)("verifyPassword",[e],(e=>{e?n(e):t(!0)}))}))}async function L(e){const n=await(0,C.submitRequestToBackground)("getSeedPhrase",[e]);return t.from(n).toString("utf8")}function W(e){return{type:v.UPDATE_CUSTOM_NONCE,value:e}}function U(e){return t=>{t({type:v.COMPLETED_TX,value:{id:e}})}}function x(e,t){return{type:v.UPDATE_TRANSACTION_PARAMS,id:e,value:t}}async function G(e){return(0,C.submitRequestToBackground)("handleSnapRequest",[e])}function H(){return e=>new Promise((e=>{(0,C.callBackgroundMethod)("unMarkPasswordForgotten",[],(()=>{e()}))})).then((()=>de(e)))}function K(){return{type:v.UNLOCK_IN_PROGRESS}}function j(e){return{type:v.UNLOCK_FAILED,value:e}}function V(e){return{type:v.UNLOCK_SUCCEEDED,value:e}}function Q(e){return(t,n)=>{var a,r;const s=n(),i=(0,m.getProviderConfig)(s),{metamask:c}=s;if(null==e||!e.length)return c;const u=function(e,t){const n={...e};for(const e of t){const{op:t,path:a,value:r}=e;if("replace"!==t)throw new Error(`Unsupported patch operation: ${t}`);n[a[0]]=r}return n}(c,e),{currentLocale:d}=c,l=(0,f.getSelectedInternalAccount)(s),g=null==l?void 0:l.address,{currentLocale:h}=u,p=(0,m.getProviderConfig)({metamask:u}),y=(0,f.getSelectedInternalAccount)({metamask:u}),T=null==y?void 0:y.address;d&&h&&d!==h&&t(le(h)),g!==T&&t({type:v.SELECTED_ADDRESS_CHANGED});const k=(null===(a=u.addressBook)||void 0===a?void 0:a[null==p?void 0:p.chainId])??{},b=(null===(r=c.addressBook)||void 0===r?void 0:r[null==i?void 0:i.chainId])??{},S=(0,f.getMetaMaskAccounts)({metamask:u}),E=(0,f.getMetaMaskAccounts)({metamask:c}),R=S[T],A=S[g];return Object.entries(E).forEach((([e,n])=>{(0,o.isEqual)(n,S[e])||t({type:v.ACCOUNT_CHANGED,payload:{account:S[e]}})})),!1===(0,o.isEqual)(A,R)&&t({type:v.SELECTED_ACCOUNT_CHANGED,payload:{account:R}}),!1===(0,o.isEqual)(b,k)&&t({type:v.ADDRESS_BOOK_UPDATED,payload:{addressBook:k}}),!1===(0,o.isEqual)(c.gasFeeEstimates,u.gasFeeEstimates)&&t({type:v.GAS_FEE_ESTIMATES_UPDATED,payload:{gasFeeEstimates:u.gasFeeEstimates,gasEstimateType:u.gasEstimateType}}),t({type:v.UPDATE_METAMASK_STATE,value:u}),i.chainId!==p.chainId&&(t({type:v.CHAIN_CHANGED,payload:p.chainId}),t((0,w.initializeSendState)({chainHasChanged:!0}))),u}}const z=()=>new Promise(((e,t)=>{(0,C.callBackgroundMethod)("setLocked",[],(n=>{n?t(n):e()}))}));async function $(e){a.default.debug("background.setSelectedInternalAccount"),await(0,C.submitRequestToBackground)("setSelectedInternalAccount",[e])}function Y(){return{type:v.SHOW_ACCOUNTS_PAGE}}function X({id:e}={}){return{type:v.SHOW_CONF_TX_PAGE,id:e}}function Z(e){return async t=>{await(0,C.submitRequestToBackground)("setSwitchedNetworkDetails",[e]),await de(t)}}async function J(e){a.default.debug(`background.setActiveNetworkConfigurationId: ${e}`),await(0,C.submitRequestToBackground)("setActiveNetworkConfigurationId",[e])}function ee(e){return{type:v.MODAL_OPEN,payload:e}}function te(){return(e,t)=>{const n=t(),a=(0,f.getApprovalFlows)(n);(0,g.getEnvironmentType)()!==l.ENVIRONMENT_TYPE_NOTIFICATION||(0,f.hasTransactionPendingApprovals)(n)||(0,f.getIsSigningQRHardwareTransaction)(n)||0!==a.length||Te()}}function ne(e){return{type:v.SHOW_LOADING,payload:e}}function ae(){return{type:v.SHOW_NFT_STILL_FETCHING_INDICATION}}function re(){return{type:v.HIDE_LOADING}}function oe(){return{type:v.HIDE_NFT_STILL_FETCHING_INDICATION}}function se(e){var t;return(0,M.isErrorWithMessage)(e)?{type:v.DISPLAY_WARNING,payload:(null==e||null===(t=e.cause)||void 0===t?void 0:t.message)||e.message}:"string"==typeof e?{type:v.DISPLAY_WARNING,payload:e}:{type:v.DISPLAY_WARNING,payload:`${e}`}}function ie(e,t,n=!0){return a=>(n&&a(ne()),new Promise(((r,o)=>{(0,C.callBackgroundMethod)("setPreference",[e,t],((e,t)=>{if(n&&a(re()),e)return a(se(e)),void o(e);r(t)}))})))}function ce(){return{type:v.COMPLETE_ONBOARDING}}function ue(){return{type:v.RESET_ONBOARDING}}async function de(e){let t;try{t=await(0,C.submitRequestToBackground)("getStatePatches")}catch(t){throw e(se(t)),t}return e(Q(t))}function le(e){return async t=>{t(ne());try{await(0,R.loadRelativeTimeFormatLocaleData)(e);const n=await(0,R.fetchLocale)(e),a=await(0,C.submitRequestToBackground)("setCurrentLocale",[e]);(0,d.default)(a),t(ge(e,n))}catch(e){return void t(se(e))}finally{t(re())}}}function ge(e,t){return{type:v.SET_CURRENT_LOCALE,payload:{locale:e,messages:t}}}function fe(e){return t=>(a.default.debug("background.setSeedPhraseBackedUp"),new Promise(((n,a)=>{(0,C.callBackgroundMethod)("setSeedPhraseBackedUp",[e],(e=>{if(e)return t(se(e)),void a(e);de(t).then(n).catch(a)}))})))}function me(e){return{type:v.SET_NEXT_NONCE,payload:e}}function we(e){return{type:v.SET_REQUEST_ACCOUNT_TABS,payload:e}}function he(e){return{type:v.SET_OPEN_METAMASK_TAB_IDS,payload:e}}async function pe(e){return(0,C.submitRequestToBackground)("addPollingTokenToAppState",[e,l.POLLING_TOKEN_ENVIRONMENT_TYPES[(0,g.getEnvironmentType)()]])}async function ye(e){return(0,C.submitRequestToBackground)("removePollingTokenFromAppState",[e,l.POLLING_TOKEN_ENVIRONMENT_TYPES[(0,g.getEnvironmentType)()]])}async function Te(){await(0,C.submitRequestToBackground)("markNotificationPopupAsAutomaticallyClosed"),global.platform.closeCurrentWindow()}function ke(e,t){return(0,C.submitRequestToBackground)("trackMetaMetricsEvent",[{...e,actionId:(0,C.generateActionId)()},t])}async function be(e){await(0,C.submitRequestToBackground)("setUnconnectedAccountAlertShown",[e])}const Se=async(e,t,n)=>{const a=t.map((t=>{const a={...e,maxFeePerGas:(0,A.decimalToHex)(t.maxFeePerGas),maxPriorityFeePerGas:(0,A.decimalToHex)(t.maxPriorityFeePerGas),gas:n?(0,A.decimalToHex)(21e3):e.gas,value:e.value};return n&&(a.to=a.from,a.data="0x"),a}));return await(0,C.submitRequestToBackground)("approveTransactionsWithSameNonce",[a])}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"$root$",file:"ui/store/actions.ts"}],[6745,{pify:4246},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.generateActionId=n.callBackgroundMethod=void 0,n.setBackgroundConnection=async function(e){o=e,s=(0,r.default)(o)},n.submitRequestToBackground=function(e,t){var n;return null===(n=s)||void 0===n?void 0:n[e](...t??[])};var a,r=(a=e("pify"))&&a.__esModule?a:{default:a};let o=null,s=null;n.generateActionId=()=>Date.now()+Math.random();n.callBackgroundMethod=(e,t,n)=>{var a;null===(a=o)||void 0===a||a[e](...t,n)}}}},{package:"$root$",file:"ui/store/background-connection.ts"}],[7,{"../../../shared/modules/object.utils":5041},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.SENTRY_UI_STATE=n.SENTRY_BACKGROUND_STATE=n.MMI_SENTRY_BACKGROUND_STATE=void 0;var a=e("../../../shared/modules/object.utils");n.MMI_SENTRY_BACKGROUND_STATE={MMIController:{opts:!0},CustodyController:{store:!0},MmiConfigurationController:{store:!0,configurationClient:!0}};const r=n.SENTRY_BACKGROUND_STATE={AccountsController:{internalAccounts:{accounts:!1,selectedAccount:!1}},AccountTracker:{accounts:!1,accountsByChainId:!1,currentBlockGasLimit:!0,currentBlockGasLimitByChainId:!0},AddressBookController:{addressBook:!1},AlertController:{alertEnabledness:!0,unconnectedAccountAlertShownOrigins:!1,web3ShimUsageOrigins:!1},AnnouncementController:{announcements:!1},AuthenticationController:{isSignedIn:!1},NetworkOrderController:{orderedNetworkList:[]},AccountOrderController:{pinnedAccountList:[],hiddenAccountList:[]},AppMetadataController:{currentAppVersion:!0,currentMigrationVersion:!0,previousAppVersion:!0,previousMigrationVersion:!0},ApprovalController:{approvalFlows:!1,pendingApprovals:!1,pendingApprovalCount:!1},AppStateController:{browserEnvironment:!0,connectedStatusPopoverHasBeenShown:!0,currentPopupId:!1,onboardingDate:!1,currentExtensionPopupId:!1,defaultHomeActiveTabName:!0,fullScreenGasPollTokens:!0,hadAdvancedGasFeesSetPriorToMigration92_3:!0,nftsDetectionNoticeDismissed:!0,nftsDropdownState:!0,notificationGasPollTokens:!0,outdatedBrowserWarningLastShown:!0,popupGasPollTokens:!0,qrHardware:!0,recoveryPhraseReminderHasBeenShown:!0,recoveryPhraseReminderLastShown:!0,showBetaHeader:!0,showPermissionsTour:!0,showNetworkBanner:!0,showAccountBanner:!0,switchedNetworkDetails:!1,switchedNetworkNeverShowMessage:!1,showTestnetMessageInDropdown:!0,surveyLinkLastClickedOrClosed:!0,snapsInstallPrivacyWarningShown:!0,termsOfUseLastAgreed:!0,timeoutMinutes:!0,trezorModel:!0},MultichainBalancesController:{balances:!1},BridgeController:{bridgeState:{bridgeFeatureFlags:{extensionConfig:!1,extensionSupport:!1,destNetworkAllowlist:[],srcNetworkAllowlist:[]},destTokens:{},destTopAssets:[],srcTokens:{},srcTopAssets:[],quoteRequest:{walletAddress:!1,srcTokenAddress:!0,slippage:!0,srcChainId:!0,destChainId:!0,destTokenAddress:!0,srcTokenAmount:!0},quotes:[],quotesLastFetched:!0,quotesLoadingStatus:!0,quotesRefreshCount:!0}},BridgeStatusController:{bridgeStatusState:{txHistory:!1}},CronjobController:{jobs:!1},CurrencyController:{currentCurrency:!0,currencyRates:!0},DecryptMessageController:{unapprovedDecryptMsgs:!1,unapprovedDecryptMsgCount:!0},EncryptionPublicKeyController:{unapprovedEncryptionPublicKeyMsgs:!1,unapprovedEncryptionPublicKeyMsgCount:!0},EnsController:{ensResolutionsByAddress:!1,ensEntries:!1},GasFeeController:{estimatedGasFeeTimeBounds:!0,gasEstimateType:!0,gasFeeEstimates:!0,gasFeeEstimatesByChainId:!0,nonRPCGasFeeApisDisabled:!1},KeyringController:{isUnlocked:!0,keyrings:!1},LoggingController:{logs:!1},NotificationServicesController:{subscriptionAccountsSeen:!1,isMetamaskNotificationsFeatureSeen:!1,isNotificationServicesEnabled:!1,isFeatureAnnouncementsEnabled:!1,metamaskNotificationsList:!1,metamaskNotificationsReadList:!1,isCheckingAccountsPresence:!1,isFetchingMetamaskNotifications:!1,isUpdatingMetamaskNotifications:!1,isUpdatingMetamaskNotificationsAccount:!1},MetaMetricsController:{eventsBeforeMetricsOptIn:!1,fragments:!1,metaMetricsId:!0,participateInMetaMetrics:!0,previousUserTraits:!1,segmentApiCalls:!1,traits:!1,dataCollectionForMarketing:!1,marketingCampaignCookieId:!0,latestNonAnonymousEventTimestamp:!0},MetaMetricsDataDeletionController:{metaMetricsDataDeletionId:!0,metaMetricsDataDeletionTimestamp:!0},NameController:{names:!1,nameSources:!1,useExternalNameSources:!1},NetworkController:{networkConfigurations:!1,networksMetadata:!0,selectedNetworkClientId:!1},NftController:{allNftContracts:!1,allNfts:!1,ignoredNfts:!1},OnboardingController:{completedOnboarding:!0,firstTimeFlowType:!0,onboardingTabs:!1,seedPhraseBackedUp:!0},PPOMController:{securityAlertsEnabled:!1,storageMetadata:[],versionInfo:[]},PermissionController:{subjects:!1},PermissionLogController:{permissionActivityLog:!1,permissionHistory:!1},PhishingController:{},PreferencesController:{advancedGasFee:!0,currentLocale:!0,dismissSeedBackUpReminder:!0,overrideContentSecurityPolicyHeader:!0,featureFlags:!0,forgottenPassword:!0,identities:!1,incomingTransactionsPreferences:!0,isIpfsGatewayEnabled:!1,ipfsGateway:!1,knownMethodData:!1,ledgerTransportType:!0,lostIdentities:!1,openSeaEnabled:!0,preferences:{autoLockTimeLimit:!0,hideZeroBalanceTokens:!0,redesignedConfirmationsEnabled:!0,redesignedTransactionsEnabled:!1,isRedesignedConfirmationsDeveloperEnabled:!1,showExtensionInFullSizeView:!0,showFiatInTestnets:!0,showTestNetworks:!0,smartTransactionsOptInStatus:!0,tokenNetworkFilter:{},showNativeTokenAsMainBalance:!0,petnamesEnabled:!0,showConfirmationAdvancedDetails:!0,privacyMode:!1},useExternalServices:!1,selectedAddress:!1,snapRegistryList:!1,theme:!0,signatureSecurityAlertResponses:!1,use4ByteResolution:!0,useAddressBarEnsResolution:!0,useBlockie:!0,useCurrencyRateCheck:!0,useMultiAccountBalanceChecker:!0,useNftDetection:!0,useNonceField:!0,usePhishDetect:!0,useTokenDetection:!0,useRequestQueue:!0,useTransactionSimulations:!0,enableMV3TimestampSave:!0},RemoteFeatureFlagController:{remoteFeatureFlags:!0,cacheTimestamp:!1},NotificationServicesPushController:{fcmToken:!1},MultichainRatesController:{fiatCurrency:!0,rates:!0,cryptocurrencies:!0},QueuedRequestController:{queuedRequestCount:!0},SelectedNetworkController:{domains:!1},SignatureController:{unapprovedPersonalMsgCount:!0,unapprovedPersonalMsgs:!1,unapprovedTypedMessages:!1,unapprovedTypedMessagesCount:!0},SmartTransactionsController:{smartTransactionsState:{fees:{approvalTxFees:!0,tradeTxFees:!0},liveness:!0,smartTransactions:!1,userOptIn:!0,userOptInV2:!0}},SnapController:{snaps:!1},SnapInterfaceController:{interfaces:!1},SnapInsightsController:{insights:!1},SnapsRegistry:{database:!1,lastUpdated:!1,databaseUnavailable:!1},SubjectMetadataController:{subjectMetadata:!1},SwapsController:{swapsState:{approveTxId:!1,customApproveTxData:!1,customGasPrice:!0,customMaxFeePerGas:!0,customMaxGas:!0,customMaxPriorityFeePerGas:!0,errorKey:!0,fetchParams:!0,quotes:!1,quotesLastFetched:!0,quotesPollingLimitEnabled:!0,routeState:!0,saveFetchedQuotes:!0,selectedAggId:!0,swapsFeatureFlags:!0,swapsFeatureIsLive:!0,swapsQuotePrefetchingRefreshTime:!0,swapsQuoteRefreshTime:!0,swapsStxBatchStatusRefreshTime:!0,swapsStxStatusDeadline:!0,swapsStxGetTransactionsRefreshTime:!0,swapsStxMaxFeeMultiplier:!0,swapsUserFeeLevel:!0,tokens:!1,topAggId:!1,tradeTxId:!1}},TokenDetectionController:{[a.AllProperties]:!1},TokenListController:{preventPollingOnNetworkRestart:!0,tokenList:!1,tokensChainsCache:{[a.AllProperties]:!1}},TokenBalancesController:{tokenBalances:!1},TokenRatesController:{marketData:!1},TokensController:{allDetectedTokens:{[a.AllProperties]:!1},allIgnoredTokens:{[a.AllProperties]:!1},allTokens:{[a.AllProperties]:!1},detectedTokens:!1,ignoredTokens:!1,tokens:!1},TransactionController:{transactions:!1,lastFetchedBlockNumbers:!1,methodData:!1},TxController:{transactions:!1},UserOperationController:{userOperations:!1},UserStorageController:{isProfileSyncingEnabled:!0,isProfileSyncingUpdateLoading:!1,hasAccountSyncingSyncedAtLeastOnce:!1,isAccountSyncingReadyToBeDispatched:!1}},o=Object.values(r).reduce(((e,t)=>({...e,...t})),{});n.SENTRY_UI_STATE={gas:!0,history:!0,metamask:{...o,isInitialized:!0,customNonceValue:!0,isAccountMenuOpen:!0,isNetworkMenuOpen:!0,nextNonce:!0,pendingTokens:!1,welcomeScreenSeen:!0,confirmationExchangeRates:!0,useSafeChainsListValidation:!0,watchEthereumAccountEnabled:!1,bitcoinSupportEnabled:!1,bitcoinTestnetSupportEnabled:!1,addSnapAccountEnabled:!1,snapsAddSnapAccountModalDismissed:!1,switchedNetworkDetails:!1,switchedNetworkNeverShowMessage:!1,newPrivacyPolicyToastClickedOrClosed:!1,newPrivacyPolicyToastShownDate:!1},unconnectedAccount:!0}}}},{package:"$root$",file:"app/scripts/constants/sentry-state.ts"}],[77,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){if(e.includes(a)){const t=e.slice(a.length);return t.slice(t.indexOf(r)+r.length)}return e};const a="Error: [ethjs-rpc] rpc error with payload ",r="Error: "}}},{package:"$root$",file:"app/scripts/lib/extractEthjsErrorMessage.js"}],[78,{"../../_locales/index.json":3,"webextension-polyfill":4954},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=async function(){let e;try{e=await a.default.i18n.getAcceptLanguages()}catch(t){e=[]}e||(e=[]);let t=e.map((e=>e.toLowerCase().replace("_","-"))).find((e=>s[e]!==undefined||s[e.split("-")[0]]!==undefined));t!==undefined&&s[t]===undefined&&(t=t.split("-")[0]);return s[t]||"en"};var a=o(e("webextension-polyfill")),r=o(e("../../_locales/index.json"));function o(e){return e&&e.__esModule?e:{default:e}}const s={zh:"zh_CN"};r.default.forEach((e=>{e&&e.code&&(s[e.code.toLowerCase().replace("_","-")]=e.code)}))}}},{package:"$root$",file:"app/scripts/lib/get-first-preferred-lang-code.js"}],[81,{"../../../shared/modules/browser-runtime.utils":5026,"@sentry/browser":2747,loglevel:4117,"webextension-polyfill":4954},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=i(e("webextension-polyfill")),r=i(e("loglevel")),o=e("@sentry/browser"),s=e("../../../shared/modules/browser-runtime.utils");function i(e){return e&&e.__esModule?e:{default:e}}n.default=class{constructor(){this.isSupported=Boolean(a.default.storage.local),this.isSupported||r.default.error("Storage local API not available."),this.dataPersistenceFailing=!1,this.mostRecentRetrievedState=null,this.isExtensionInitialized=!1}setMetadata(e){this.metadata=e}async set(e){if(!this.isSupported)throw new Error("Metamask- cannot persist state to local store as this browser does not support this action");if(!e)throw new Error("MetaMask - updated state is missing");if(!this.metadata)throw new Error('MetaMask - metadata must be set on instance of ExtensionStore before calling "set"');try{await this._set({data:e,meta:this.metadata}),this.dataPersistenceFailing&&(this.dataPersistenceFailing=!1)}catch(e){this.dataPersistenceFailing||(this.dataPersistenceFailing=!0,(0,o.captureException)(e)),r.default.error("error setting state in local store:",e)}finally{this.isExtensionInitialized=!0}}async get(){if(!this.isSupported)return undefined;const e=await this._get();return t=e,0===Object.keys(t).length?(this.mostRecentRetrievedState=null,undefined):(this.isExtensionInitialized||(this.mostRecentRetrievedState=e),e);var t}_get(){const{local:e}=a.default.storage;return new Promise(((t,n)=>{e.get(null).then((e=>{const a=(0,s.checkForLastError)();a?n(a):t(e)}))}))}_set(e){const{local:t}=a.default.storage;return new Promise(((n,a)=>{t.set(e).then((()=>{const e=(0,s.checkForLastError)();e?a(e):n()}))}))}cleanUpMostRecentRetrievedState(){this.mostRecentRetrievedState&&(this.mostRecentRetrievedState=null)}}}}},{package:"$root$",file:"app/scripts/lib/local-store.js"}],[82,{"webextension-polyfill":4954},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.getManifestFlags=function(){if("undefined"===undefined||!r.default.runtime.getManifest)return{};return r.default.runtime.getManifest()._flags||{}};var a,r=(a=e("webextension-polyfill"))&&a.__esModule?a:{default:a}}}},{package:"$root$",file:"app/scripts/lib/manifestFlags.ts"}],[86,{"../../../../shared/modules/hexstring-utils":5036,"@metamask/eth-sig-util":1536,"@metamask/utils":2620},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.isEthAddress=s,n.normalizeAddress=function(e){return s(e)?(0,r.normalize)(e):e},n.normalizeSafeAddress=function(e){return s(e)?(0,o.toChecksumHexAddress)(e):e};var a=e("@metamask/utils"),r=e("@metamask/eth-sig-util"),o=e("../../../../shared/modules/hexstring-utils");function s(e){return(0,a.isValidHexAddress)(e)}}}},{package:"$root$",file:"app/scripts/lib/multichain/address.ts"}],[87,{"../../../shared/modules/fetch-with-timeout":5034,loglevel:4117},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,n){Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=r(e("loglevel"));function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const s=(0,r(e("../../../shared/modules/fetch-with-timeout")).default)();n.default=class{constructor(){o(this,"isSupported",!0),this._initialized=!1,this._initializing=this._init(),this._state=undefined,this.mostRecentRetrievedState=null}async _init(){try{const e=await s("http://localhost:12345/state.json");e.ok&&(this._state=await e.json())}catch(e){a.default.debug(`Error loading network state: '${e.message}'`)}finally{this._initialized=!0}}async get(){return this._initialized||await this._initializing,this.mostRecentRetrievedState||(this.mostRecentRetrievedState=this._state),this._state}setMetadata(e){this.metadata=e}async set(e){if(!this.isSupported)throw new Error("Metamask- cannot persist state to local store as this browser does not support this action");if(!e)throw new Error("MetaMask - updated state is missing");if(!this.metadata)throw new Error('MetaMask - metadata must be set on instance of ExtensionStore before calling "set"');this._initialized||await this._initializing,this._state={data:e,meta:this._metadata}}cleanUpMostRecentRetrievedState(){this.mostRecentRetrievedState&&(this.mostRecentRetrievedState=null)}}}}},{package:"$root$",file:"app/scripts/lib/network-store.js"}]],[],{});